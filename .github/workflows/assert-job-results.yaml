name: "Assert job results"

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened

jobs:
  job-skip:
    runs-on: ubuntu-latest
    if: false
    timeout-minutes: 5
    steps:
      - name: skip
        run: echo "skipped"
    
  job-success:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: success
        run: echo "success"

  assert-job-success:
    runs-on: ubuntu-latest
    needs:
      - job-success
    if: always()
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: assert
        uses: ./assert-job-results
        with:
          need-jobs: ${{ toJSON(needs) }}

  assert-job-allow-skip:
    runs-on: ubuntu-latest
    needs:
      - job-success
      - job-skip
    if: always()
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: assert
        uses: ./assert-job-results
        with:
          need-jobs: ${{ toJSON(needs) }}
          allow-skipped: true

  assert-all-jobs:
    runs-on: ubuntu-latest
    if: always()
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: assert failure
        continue-on-error: true
        id: assert-failure
        uses: ./assert-job-results
        env:
          NEEDS: >-
            {
                "job-failure": {
                    "result": "failure"
                },
                "job-success": {
                    "result": "success"
                }
            }
        with:
          need-jobs: ${{ toJSON(fromJSON(env.NEEDS)) }}
      - name: check assert-failure should be failure
        if: steps.assert-failure.outcome != 'failure'
        run: exit 1
      - name: assert skip
        continue-on-error: true
        id: assert-skip
        uses: ./assert-job-results
        env:
          NEEDS: >-
            {
                "job-skip": {
                    "result": "skipped"
                },
                "job-success": {
                    "result": "success"
                }
            }
        with:
          need-jobs: ${{ toJSON(fromJSON(env.NEEDS)) }}
      - name: check assert-skip should be failure
        if: steps.assert-skip.outcome != 'failure'
        run: exit 1
